---
interface Props {
  title: string;
  description: string;
  img: string;
  techs: Array<string>;
  i: number;
}

const { title, description, img, techs, i } = Astro.props;
---

<section
  class={`
      h-1/4 w-[90%] 
      p-10 mb-[100px] mt-[50px]
      bg-bg 
      border border-text/50
      rounded-[25px]
      flex justify-between items-center gap-10
      max-[400px]:px-2 max-md:flex-wrap max-md:justify-center
      z-[${i * 100}]
      project-section
      
  `}
>
  <div
    class="flex flex-col justify-center gap-20 w-1/2 min-w-[250px] max-md:w-full max-md:order-2"
  >
    <div>
      <h3 class="text-5xl mb-5 max-md:text-4xl max-[430px]:text-2xl">
        {title}
      </h3>
      <p class="text-3xl text-secondary max-md:text-2xl max-[430px]:text-xl">
        - {description}
      </p>
    </div>
    <div
      class="flex gap-3 [&>*]:bg-primary/40 [&>*]:rounded-full [&>*]:px-4 [&>*]:py-2 flex-wrap"
    >
      {techs.map((tech) => <p>{tech}</p>)}
    </div>
  </div>
  <figure class=`w-1/2 max-md:w-full max-md:order-1 bg-[url(${img})] bg-cover bg-center`>
  </figure>
</section>

<script>
  const sections = document.querySelectorAll(".project-section");

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        entry.target.classList.add("sticky");
        entry.target.classList.add("top-[50px]");
      });
    },
    { threshold: 0.9 }
  );

  sections.forEach((section) => observer.observe(section));
</script>
